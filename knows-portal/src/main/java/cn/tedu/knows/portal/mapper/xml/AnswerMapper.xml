<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
namespace(命名空间)
指定当前xml文件对应的Mapper接口
必须指定一个存在的Mapper接口,当前xml文件才能正常运作
-->
<mapper namespace="cn.tedu.knows.portal.mapper.AnswerMapper">

    <!-- 回答包含评论集合的映射结果 -->
    <resultMap id="answerCommentMap" type="cn.tedu.knows.commons.model.Answer">
        <id     column="id"             property="id" />
        <result column="content"        property="content" />
        <result column="like_count"     property="likeCount" />
        <result column="user_id"        property="userId" />
        <result column="user_nick_name" property="userNickName" />
        <result column="quest_id"       property="questId" />
        <result column="createtime"     property="createtime" />
        <result column="accept_status"  property="acceptStatus" />
        <!--
        配置collection标签,
        property属性指定Answer类中评论集合的属性名
        也就是将查询结果中所有评论相关的数据,都要保存在评论集合中
        ofType指定集合泛型的类型,这里是List<Comment>所以是Comment的全类名
        -->
        <collection property="comments" ofType="cn.tedu.knows.commons.model.Comment">
            <id column="comment_id" property="id"/>
            <result column="comment_user_id" property="userId"/>
            <result column="comment_answer_id" property="answerId"/>
            <result column="comment_content" property="content"/>
            <result column="comment_createtime" property="createtime"/>
        </collection>
    </resultMap>

    <!--
    select标签,表示一个查询方法,id和AnswerMapper中的一个方法名一致
    注意不建议在标签内打注释,如果一定要打,写数据库sql语句注释,写xml注释会报错
    我们需要关注的是这个查询的返回结果,反射需要自定义映射的查询结果都要编写resultMap属性
    answerCommentMap是映射结果的名称,需要我们自己编写
    -->
    <select id="findAnswersByQuestionId" resultMap="answerCommentMap">
        SELECT
            a.id,
            a.content,
            a.like_count,
            a.user_id,
            a.user_nick_name,
            a.quest_id,
            a.createtime,
            a.accept_status,
            c.id             comment_id,
            c.user_id        comment_user_id,
            c.user_nick_name comment_user_nick_name,
            c.answer_id      comment_answer_id,
            c.content        comment_content,
            c.createtime     comment_createtime
        FROM answer a
                 LEFT JOIN comment c ON a.id=c.answer_id
        WHERE quest_id=#{id}
        ORDER BY a.id
    </select>

    <select id="findUserByAnswerId" resultMap="userMap">
        select * from user left join answer on answer.user_id = user.id where answer.id = #{id}
    </select>

    <resultMap id="userMap" type="cn.tedu.knows.commons.model.User">
        <id column="id" property="id"></id>
        <result column="username" property="username"></result>
        <result column="nickname" property="nickname"></result>
    </resultMap>
</mapper>
